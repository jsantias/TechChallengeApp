#====================================================================================================
# Author      : John Santias
# Date        : 25-06-2022
# Version     : 1.0.0
#====================================================================================================
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Servian tech challenge app'
#====================================================================================================
#                                             Parameters
#====================================================================================================  
Parameters:
  ImageId: 
    Type: AWS::EC2::Image::Id
    Description: The AMI image id used to launch an EC2 instance
    Default: 'ami-0300dc03c13eb7660'
  InstanceType: 
    Type: String
    Description: The EC2 instance type
    Default: 't2.micro'
  VpcId:
    Type: AWS::EC2::VPC::Id 
    Description: The VPC ID for launching resources in

#====================================================================================================
#                                             Resources
#====================================================================================================
Resources:

#====================================================================================================
#                                                EC2
#====================================================================================================

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref IAMRole
  
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      BlockDeviceMappings: 
      - DeviceName: "/dev/sda1"
        Ebs: 
          VolumeType: "gp3"
          Iops: "200"
          DeleteOnTermination: true
          VolumeSize: "8"
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64: 
          |
            #!/bin/bash

            # Install git
            sudo apt install git curl unzip -y

            # Install powershell
            sudo apt-get install -y wget apt-transport-https software-properties-common
            wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update
            sudo apt-get install -y powershell -y

            # Install docker
            sudo apt-get update
            sudo apt-get install \
                ca-certificates \
                curl \
                gnupg \
                lsb-release -y
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io -y
            sudo systemctl status docker
            sudo systemctl enable docker
            sudo usermod -aG docker ${!USER}

            sudo addgroup --system docker
            sudo adduser $USER docker
            newgrp docker

            # Install Docker-compose
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic to the ec2 instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

#====================================================================================================
#                                             IAM
#==================================================================================================== 
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Description: Allows EC2 tasks to call AWS services on your behalf.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref EC2IAMPolicy
  
  EC2IAMPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ssmmessages:CreateControlChannel'
              - 'ssmmessages:CreateDataChannel'
              - 'ssmmessages:OpenControlChannel'
              - 'ssmmessages:OpenDataChannel'
            Resource: '*'

#====================================================================================================
#                                             Outputs
#====================================================================================================
Outputs: 
  InstanceID:
    Description: The Instance ID
    Value: !Ref EC2Instance
  InstancePublicIP:
    Description: The instance public id
    Value: !GetAtt EC2Instance.PublicIp